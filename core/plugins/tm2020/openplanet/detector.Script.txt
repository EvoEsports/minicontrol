#Include "TextLib" as TextLib

Boolean CheckRightMode() {
    declare Text[] Matches = TextLib::RegexMatch( """Openplanet ([\d.]+) \((\w+), ([A-Z]\w+), (\d{4}-\d{2}-\d{2})\)(?:\s(?:\[([A-Z]+)\]))*$""", System.ExtraTool_Info, "");
    log(Matches);
    if (Matches.count == 6) {
        if (Matches[5] == "{{ data.signature }}") {
            return True;
        }
    }
    
    return False;
}

main() {
    declare Integer lastTime = Now;
    declare Text lastToolInfo = System.ExtraTool_Info;
    declare Integer counter = 30;
    declare CMlEntry entry <=> (Page.GetFirstChild("entry") as CMlEntry);
    declare CMlLabel label <=> (Page.GetFirstChild("countdownText") as CMlLabel);
    declare CMlFrame frame <=> (Page.GetFirstChild("infoWindow") as CMlFrame);
    declare Boolean ValidMode = CheckRightMode();    
    
    if (ValidMode) {
        frame.Hide();
    }

    label.Value = counter ^ " seconds";
    
    while (True) {
        yield;
        foreach(Event in PendingEvents) {
            if ( Event.Type == CMlScriptEvent::Type::MouseClick) {
                if (Event.ControlId == "btnDisconnect") {
                    Playground.QuitServer(False);
                }
            }
        }

        if (!ValidMode && lastTime + 1000 <= Now) {
            if (counter < 0) {
                Playground.QuitServer(False);
                return;
            }
            entry.Value = System.ExtraTool_Info;                        
            label.Value = counter ^ " seconds";    
            lastTime = Now;          
            counter -= 1;
        }

        if (lastToolInfo != System.ExtraTool_Info) {
            lastToolInfo = System.ExtraTool_Info;
            ValidMode = CheckRightMode();            
            if (ValidMode) {
                frame.Hide();
            } else {
                frame.Show();
                counter = 30;
            }            
        }     
    }
}